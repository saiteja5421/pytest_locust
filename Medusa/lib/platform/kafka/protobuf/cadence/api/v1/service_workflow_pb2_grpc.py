# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from lib.platform.kafka.protobuf.cadence.api.v1 import service_workflow_pb2 as uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2


class WorkflowAPIStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RestartWorkflowExecution = channel.unary_unary(
                '/uber.cadence.api.v1.WorkflowAPI/RestartWorkflowExecution',
                request_serializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.RestartWorkflowExecutionRequest.SerializeToString,
                response_deserializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.RestartWorkflowExecutionResponse.FromString,
                )
        self.StartWorkflowExecution = channel.unary_unary(
                '/uber.cadence.api.v1.WorkflowAPI/StartWorkflowExecution',
                request_serializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.StartWorkflowExecutionRequest.SerializeToString,
                response_deserializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.StartWorkflowExecutionResponse.FromString,
                )
        self.SignalWorkflowExecution = channel.unary_unary(
                '/uber.cadence.api.v1.WorkflowAPI/SignalWorkflowExecution',
                request_serializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.SignalWorkflowExecutionRequest.SerializeToString,
                response_deserializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.SignalWorkflowExecutionResponse.FromString,
                )
        self.SignalWithStartWorkflowExecution = channel.unary_unary(
                '/uber.cadence.api.v1.WorkflowAPI/SignalWithStartWorkflowExecution',
                request_serializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.SignalWithStartWorkflowExecutionRequest.SerializeToString,
                response_deserializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.SignalWithStartWorkflowExecutionResponse.FromString,
                )
        self.ResetWorkflowExecution = channel.unary_unary(
                '/uber.cadence.api.v1.WorkflowAPI/ResetWorkflowExecution',
                request_serializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.ResetWorkflowExecutionRequest.SerializeToString,
                response_deserializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.ResetWorkflowExecutionResponse.FromString,
                )
        self.RequestCancelWorkflowExecution = channel.unary_unary(
                '/uber.cadence.api.v1.WorkflowAPI/RequestCancelWorkflowExecution',
                request_serializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.RequestCancelWorkflowExecutionRequest.SerializeToString,
                response_deserializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.RequestCancelWorkflowExecutionResponse.FromString,
                )
        self.TerminateWorkflowExecution = channel.unary_unary(
                '/uber.cadence.api.v1.WorkflowAPI/TerminateWorkflowExecution',
                request_serializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.TerminateWorkflowExecutionRequest.SerializeToString,
                response_deserializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.TerminateWorkflowExecutionResponse.FromString,
                )
        self.DescribeWorkflowExecution = channel.unary_unary(
                '/uber.cadence.api.v1.WorkflowAPI/DescribeWorkflowExecution',
                request_serializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.DescribeWorkflowExecutionRequest.SerializeToString,
                response_deserializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.DescribeWorkflowExecutionResponse.FromString,
                )
        self.QueryWorkflow = channel.unary_unary(
                '/uber.cadence.api.v1.WorkflowAPI/QueryWorkflow',
                request_serializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.QueryWorkflowRequest.SerializeToString,
                response_deserializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.QueryWorkflowResponse.FromString,
                )
        self.DescribeTaskList = channel.unary_unary(
                '/uber.cadence.api.v1.WorkflowAPI/DescribeTaskList',
                request_serializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.DescribeTaskListRequest.SerializeToString,
                response_deserializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.DescribeTaskListResponse.FromString,
                )
        self.GetTaskListsByDomain = channel.unary_unary(
                '/uber.cadence.api.v1.WorkflowAPI/GetTaskListsByDomain',
                request_serializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.GetTaskListsByDomainRequest.SerializeToString,
                response_deserializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.GetTaskListsByDomainResponse.FromString,
                )
        self.ListTaskListPartitions = channel.unary_unary(
                '/uber.cadence.api.v1.WorkflowAPI/ListTaskListPartitions',
                request_serializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.ListTaskListPartitionsRequest.SerializeToString,
                response_deserializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.ListTaskListPartitionsResponse.FromString,
                )
        self.GetClusterInfo = channel.unary_unary(
                '/uber.cadence.api.v1.WorkflowAPI/GetClusterInfo',
                request_serializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.GetClusterInfoRequest.SerializeToString,
                response_deserializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.GetClusterInfoResponse.FromString,
                )
        self.GetWorkflowExecutionHistory = channel.unary_unary(
                '/uber.cadence.api.v1.WorkflowAPI/GetWorkflowExecutionHistory',
                request_serializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.GetWorkflowExecutionHistoryRequest.SerializeToString,
                response_deserializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.GetWorkflowExecutionHistoryResponse.FromString,
                )
        self.RefreshWorkflowTasks = channel.unary_unary(
                '/uber.cadence.api.v1.WorkflowAPI/RefreshWorkflowTasks',
                request_serializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.RefreshWorkflowTasksRequest.SerializeToString,
                response_deserializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.RefreshWorkflowTasksResponse.FromString,
                )


class WorkflowAPIServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RestartWorkflowExecution(self, request, context):
        """RestartWorkflowExecution restarts a previous workflow
        If the workflow is currently running it will terminate and restart
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartWorkflowExecution(self, request, context):
        """StartWorkflowExecution starts a new long running workflow instance.  It will create the instance with
        'WorkflowExecutionStarted' event in history and also schedule the first DecisionTask for the worker to make the
        first decision for this instance.  It will return 'WorkflowExecutionAlreadyStartedError', if an instance already
        exists with same workflowId.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SignalWorkflowExecution(self, request, context):
        """SignalWorkflowExecution is used to send a signal event to running workflow execution.  This results in
        WorkflowExecutionSignaled event recorded in the history and a decision task being created for the execution.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SignalWithStartWorkflowExecution(self, request, context):
        """SignalWithStartWorkflowExecution is used to ensure sending signal to a workflow.  If the workflow is running,
        this results in WorkflowExecutionSignaled event being recorded in the history and a decision task being created for
        the execution.  If the workflow is not running or not found, this results in WorkflowExecutionStarted and
        WorkflowExecutionSignaled events being recorded in history, and a decision task being created for the execution.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetWorkflowExecution(self, request, context):
        """ResetWorkflowExecution reset an existing workflow execution to DecisionTaskCompleted event(exclusive).
        And it will immediately terminating the current execution instance.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RequestCancelWorkflowExecution(self, request, context):
        """RequestCancelWorkflowExecution requests cancellation of a workflow instance.
        It allows workflow to properly clean up and gracefully close.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TerminateWorkflowExecution(self, request, context):
        """TerminateWorkflowExecution terminates an existing workflow execution by recording WorkflowExecutionTerminated event
        in the history and immediately terminating the execution instance.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DescribeWorkflowExecution(self, request, context):
        """DescribeWorkflowExecution returns information about the specified workflow execution.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryWorkflow(self, request, context):
        """QueryWorkflow returns query result for a specified workflow execution.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DescribeTaskList(self, request, context):
        """DescribeTaskList returns information about the target tasklist, right now this API returns the
        pollers which polled this tasklist in last few minutes.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTaskListsByDomain(self, request, context):
        """GetTaskListsByDomain returns all task lists for a given domain
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListTaskListPartitions(self, request, context):
        """ListTaskListPartitions returns information about task list partitions.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetClusterInfo(self, request, context):
        """GetClusterInfo returns information about cadence cluster.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWorkflowExecutionHistory(self, request, context):
        """Returns the history of specified workflow execution.  It fails with 'EntityNotExistError' if specified workflow
        execution in unknown to the service.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RefreshWorkflowTasks(self, request, context):
        """RefreshWorkflowTasks refreshes all tasks of a workflow.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WorkflowAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RestartWorkflowExecution': grpc.unary_unary_rpc_method_handler(
                    servicer.RestartWorkflowExecution,
                    request_deserializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.RestartWorkflowExecutionRequest.FromString,
                    response_serializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.RestartWorkflowExecutionResponse.SerializeToString,
            ),
            'StartWorkflowExecution': grpc.unary_unary_rpc_method_handler(
                    servicer.StartWorkflowExecution,
                    request_deserializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.StartWorkflowExecutionRequest.FromString,
                    response_serializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.StartWorkflowExecutionResponse.SerializeToString,
            ),
            'SignalWorkflowExecution': grpc.unary_unary_rpc_method_handler(
                    servicer.SignalWorkflowExecution,
                    request_deserializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.SignalWorkflowExecutionRequest.FromString,
                    response_serializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.SignalWorkflowExecutionResponse.SerializeToString,
            ),
            'SignalWithStartWorkflowExecution': grpc.unary_unary_rpc_method_handler(
                    servicer.SignalWithStartWorkflowExecution,
                    request_deserializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.SignalWithStartWorkflowExecutionRequest.FromString,
                    response_serializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.SignalWithStartWorkflowExecutionResponse.SerializeToString,
            ),
            'ResetWorkflowExecution': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetWorkflowExecution,
                    request_deserializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.ResetWorkflowExecutionRequest.FromString,
                    response_serializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.ResetWorkflowExecutionResponse.SerializeToString,
            ),
            'RequestCancelWorkflowExecution': grpc.unary_unary_rpc_method_handler(
                    servicer.RequestCancelWorkflowExecution,
                    request_deserializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.RequestCancelWorkflowExecutionRequest.FromString,
                    response_serializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.RequestCancelWorkflowExecutionResponse.SerializeToString,
            ),
            'TerminateWorkflowExecution': grpc.unary_unary_rpc_method_handler(
                    servicer.TerminateWorkflowExecution,
                    request_deserializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.TerminateWorkflowExecutionRequest.FromString,
                    response_serializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.TerminateWorkflowExecutionResponse.SerializeToString,
            ),
            'DescribeWorkflowExecution': grpc.unary_unary_rpc_method_handler(
                    servicer.DescribeWorkflowExecution,
                    request_deserializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.DescribeWorkflowExecutionRequest.FromString,
                    response_serializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.DescribeWorkflowExecutionResponse.SerializeToString,
            ),
            'QueryWorkflow': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryWorkflow,
                    request_deserializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.QueryWorkflowRequest.FromString,
                    response_serializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.QueryWorkflowResponse.SerializeToString,
            ),
            'DescribeTaskList': grpc.unary_unary_rpc_method_handler(
                    servicer.DescribeTaskList,
                    request_deserializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.DescribeTaskListRequest.FromString,
                    response_serializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.DescribeTaskListResponse.SerializeToString,
            ),
            'GetTaskListsByDomain': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTaskListsByDomain,
                    request_deserializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.GetTaskListsByDomainRequest.FromString,
                    response_serializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.GetTaskListsByDomainResponse.SerializeToString,
            ),
            'ListTaskListPartitions': grpc.unary_unary_rpc_method_handler(
                    servicer.ListTaskListPartitions,
                    request_deserializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.ListTaskListPartitionsRequest.FromString,
                    response_serializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.ListTaskListPartitionsResponse.SerializeToString,
            ),
            'GetClusterInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetClusterInfo,
                    request_deserializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.GetClusterInfoRequest.FromString,
                    response_serializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.GetClusterInfoResponse.SerializeToString,
            ),
            'GetWorkflowExecutionHistory': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWorkflowExecutionHistory,
                    request_deserializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.GetWorkflowExecutionHistoryRequest.FromString,
                    response_serializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.GetWorkflowExecutionHistoryResponse.SerializeToString,
            ),
            'RefreshWorkflowTasks': grpc.unary_unary_rpc_method_handler(
                    servicer.RefreshWorkflowTasks,
                    request_deserializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.RefreshWorkflowTasksRequest.FromString,
                    response_serializer=uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.RefreshWorkflowTasksResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'uber.cadence.api.v1.WorkflowAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class WorkflowAPI(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RestartWorkflowExecution(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/uber.cadence.api.v1.WorkflowAPI/RestartWorkflowExecution',
            uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.RestartWorkflowExecutionRequest.SerializeToString,
            uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.RestartWorkflowExecutionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartWorkflowExecution(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/uber.cadence.api.v1.WorkflowAPI/StartWorkflowExecution',
            uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.StartWorkflowExecutionRequest.SerializeToString,
            uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.StartWorkflowExecutionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SignalWorkflowExecution(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/uber.cadence.api.v1.WorkflowAPI/SignalWorkflowExecution',
            uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.SignalWorkflowExecutionRequest.SerializeToString,
            uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.SignalWorkflowExecutionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SignalWithStartWorkflowExecution(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/uber.cadence.api.v1.WorkflowAPI/SignalWithStartWorkflowExecution',
            uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.SignalWithStartWorkflowExecutionRequest.SerializeToString,
            uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.SignalWithStartWorkflowExecutionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResetWorkflowExecution(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/uber.cadence.api.v1.WorkflowAPI/ResetWorkflowExecution',
            uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.ResetWorkflowExecutionRequest.SerializeToString,
            uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.ResetWorkflowExecutionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RequestCancelWorkflowExecution(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/uber.cadence.api.v1.WorkflowAPI/RequestCancelWorkflowExecution',
            uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.RequestCancelWorkflowExecutionRequest.SerializeToString,
            uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.RequestCancelWorkflowExecutionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TerminateWorkflowExecution(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/uber.cadence.api.v1.WorkflowAPI/TerminateWorkflowExecution',
            uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.TerminateWorkflowExecutionRequest.SerializeToString,
            uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.TerminateWorkflowExecutionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DescribeWorkflowExecution(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/uber.cadence.api.v1.WorkflowAPI/DescribeWorkflowExecution',
            uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.DescribeWorkflowExecutionRequest.SerializeToString,
            uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.DescribeWorkflowExecutionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryWorkflow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/uber.cadence.api.v1.WorkflowAPI/QueryWorkflow',
            uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.QueryWorkflowRequest.SerializeToString,
            uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.QueryWorkflowResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DescribeTaskList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/uber.cadence.api.v1.WorkflowAPI/DescribeTaskList',
            uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.DescribeTaskListRequest.SerializeToString,
            uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.DescribeTaskListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTaskListsByDomain(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/uber.cadence.api.v1.WorkflowAPI/GetTaskListsByDomain',
            uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.GetTaskListsByDomainRequest.SerializeToString,
            uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.GetTaskListsByDomainResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListTaskListPartitions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/uber.cadence.api.v1.WorkflowAPI/ListTaskListPartitions',
            uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.ListTaskListPartitionsRequest.SerializeToString,
            uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.ListTaskListPartitionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetClusterInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/uber.cadence.api.v1.WorkflowAPI/GetClusterInfo',
            uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.GetClusterInfoRequest.SerializeToString,
            uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.GetClusterInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetWorkflowExecutionHistory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/uber.cadence.api.v1.WorkflowAPI/GetWorkflowExecutionHistory',
            uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.GetWorkflowExecutionHistoryRequest.SerializeToString,
            uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.GetWorkflowExecutionHistoryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RefreshWorkflowTasks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/uber.cadence.api.v1.WorkflowAPI/RefreshWorkflowTasks',
            uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.RefreshWorkflowTasksRequest.SerializeToString,
            uber_dot_cadence_dot_api_dot_v1_dot_service__workflow__pb2.RefreshWorkflowTasksResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
