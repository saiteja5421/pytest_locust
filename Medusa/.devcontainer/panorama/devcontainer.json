// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.217.4/containers/docker-existing-dockerfile
{
	"name": "Panorama Container",

	// Sets the run context to one level up instead of the .devcontainer folder.
	"context": "../..",

	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
	"dockerFile": "../../Panorama.Dev.Dockerfile",

	// Set *default* container specific settings.json values on container create.
	"customizations":{
		"vscode": {
			"settings": {
				"python.formatting.provider": "black",
				"python.formatting.blackArgs": [
						"--line-length",
						"120"
				],
				"python.linting.enabled": true,
				"editor.formatOnSave": false,
				"[python]": {
						"editor.formatOnSave": true
				},
				"audioCues.lineHasBreakpoint": "on",
				"audioCues.lineHasError": "on",
				"editor.wordWrap": "on"
			},
			// Add the IDs of extensions you want installed when the container is created.
			"extensions": ["ms-python.python","njpwerner.autodocstring","eamodio.gitlens"]
		}
	},	

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment the next line to run commands after the container is created - for example installing curl.
	// "postCreateCommand": "cd /workspaces/qa_automation/Medusa",

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],

	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "vscode"
	
	// When dev container is opened, below folder will be in workspace
	
	"workspaceFolder": "/workspaces/qa_automation/Medusa"
}
